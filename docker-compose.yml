# Version of docker-compose
version: '3'

services:
  sonarqube:
    build:
      context: sonarqube/
    ports:
      - 9000:9000
      - 9092:9092
    container_name: sonarqube
    networks:
      - troparo  
    environment:
      - sonar.jdbc.url=jdbc:postgresql://dbsonar:5432/sonar
    volumes:
      - ./sonarqube/sonarqube_home:/opt/sonarqube/data
      - sonarqube_conf:/opt/sonarqube/conf
      #- sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions  
  dbsonar:
    image: postgres:11
    networks:
      - troparo
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
      # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
      - postgresql_data:/var/lib/postgresql/data
  jenkins:
    build:
      context: jenkins/
    privileged: true
    user: root
    ports:
      - 8083:8080
      - 4000:5000
    container_name: jenkins
    volumes:
      - ./jenkins/jenkins_home:/var/jenkins_home #Remember that, the tmp directory is designed to be wiped on system reboot.
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - sonarqube
    networks:
      - troparo  
  # getting postgres DB
  db:
    image: postgres:11
    container_name: library-db
    ports:
      - 5532:5432
    environment:
      POSTGRES_USER: ocp
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: troparo
      POSTGRES_INITDB_ARGS: --data-checksums
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "./db-init/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
      #- pg-data:/var/lib/postgresql/data
    networks:
      - troparo
  dbtest:
    image: postgres:11
    container_name: library-dbtest
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ocp
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: troparo
      POSTGRES_INITDB_ARGS: --data-checksums  
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - "./db-init/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d"
    networks:
      - troparo


  # getting webservice image
  webservice:
    image: troparo_app
    container_name: library-webservice
    build: library-webservice/.
    ports:
     - 8080:8080
    #volumes:
     # - logs:/usr/app/resources
    depends_on:
      - db
    networks:
      - troparo

       # getting mailapp image
  mailapp:
    image: library_mailapp
    container_name: library_mailapp
    build: library-mailapp/.
    ports:
        - 8085:8080
    volumes:
      - logs:/usr/app/resources    
    depends_on:
      - webservice
    networks:
      - troparo


    # getting webapp image
  webapp:
    image: library_webapp
    container_name: library_webapp
    build: library-webapp/.
    ports:
        - 8090:8080
    #volumes:
     # - logs:/usr/app/resources
    depends_on:
      - webservice
    networks:
      - troparo


volumes:  
  pg-data:
  logs:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  postgresql:
  postgresql_data:

networks:
  troparo:

